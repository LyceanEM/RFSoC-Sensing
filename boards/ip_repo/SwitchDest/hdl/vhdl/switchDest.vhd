-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity switchDest is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    dataIn3_TVALID : IN STD_LOGIC;
    dataIn2_TVALID : IN STD_LOGIC;
    dataIn1_TVALID : IN STD_LOGIC;
    dataIn4_TVALID : IN STD_LOGIC;
    dataOut_TREADY : IN STD_LOGIC;
    dataIn1_TDATA : IN STD_LOGIC_VECTOR (511 downto 0);
    dataIn1_TREADY : OUT STD_LOGIC;
    dataIn1_TKEEP : IN STD_LOGIC_VECTOR (63 downto 0);
    dataIn1_TSTRB : IN STD_LOGIC_VECTOR (63 downto 0);
    dataIn1_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    dataIn1_TDEST : IN STD_LOGIC_VECTOR (15 downto 0);
    dataIn2_TDATA : IN STD_LOGIC_VECTOR (511 downto 0);
    dataIn2_TREADY : OUT STD_LOGIC;
    dataIn2_TKEEP : IN STD_LOGIC_VECTOR (63 downto 0);
    dataIn2_TSTRB : IN STD_LOGIC_VECTOR (63 downto 0);
    dataIn2_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    dataIn2_TDEST : IN STD_LOGIC_VECTOR (15 downto 0);
    dataIn3_TDATA : IN STD_LOGIC_VECTOR (511 downto 0);
    dataIn3_TREADY : OUT STD_LOGIC;
    dataIn3_TKEEP : IN STD_LOGIC_VECTOR (63 downto 0);
    dataIn3_TSTRB : IN STD_LOGIC_VECTOR (63 downto 0);
    dataIn3_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    dataIn3_TDEST : IN STD_LOGIC_VECTOR (15 downto 0);
    dataIn4_TDATA : IN STD_LOGIC_VECTOR (511 downto 0);
    dataIn4_TREADY : OUT STD_LOGIC;
    dataIn4_TKEEP : IN STD_LOGIC_VECTOR (63 downto 0);
    dataIn4_TSTRB : IN STD_LOGIC_VECTOR (63 downto 0);
    dataIn4_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    dataIn4_TDEST : IN STD_LOGIC_VECTOR (15 downto 0);
    dataOut_TDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
    dataOut_TVALID : OUT STD_LOGIC;
    dataOut_TKEEP : OUT STD_LOGIC_VECTOR (63 downto 0);
    dataOut_TSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
    dataOut_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    dataOut_TDEST : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of switchDest is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "switchDest_switchDest,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu48dr-ffvg1517-2-e,HLS_INPUT_CLOCK=3.500000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=2.550187,HLS_SYN_LAT=2,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=649,HLS_SYN_LUT=211,HLS_VERSION=2023_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv512_lc_1 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_predicate_op70_read_state1 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal regslice_both_dataOut_V_data_V_U_apdone_blk : STD_LOGIC;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal dest_mem : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal dataIn1_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal dataIn2_TDATA_blk_n : STD_LOGIC;
    signal dataIn3_TDATA_blk_n : STD_LOGIC;
    signal dataIn4_TDATA_blk_n : STD_LOGIC;
    signal dataOut_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tmp_last_3_fu_284_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_2_fu_306_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_1_fu_328_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_fu_350_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_tmp_data_4_reg_183 : STD_LOGIC_VECTOR (511 downto 0);
    signal ap_phi_reg_pp0_iter1_tmp_data_4_reg_183 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal ap_phi_reg_pp0_iter0_tmp_keep_4_reg_199 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter1_tmp_keep_4_reg_199 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal ap_phi_reg_pp0_iter0_tmp_strb_4_reg_215 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter1_tmp_strb_4_reg_215 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal ap_phi_reg_pp0_iter0_tmp_last_4_reg_231 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_tmp_last_4_reg_231 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal ap_phi_reg_pp0_iter0_tmp_dest_reg_247 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_reg_pp0_iter1_tmp_dest_reg_247 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to1 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal regslice_both_dataIn1_V_data_V_U_apdone_blk : STD_LOGIC;
    signal dataIn1_TDATA_int_regslice : STD_LOGIC_VECTOR (511 downto 0);
    signal dataIn1_TVALID_int_regslice : STD_LOGIC;
    signal dataIn1_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_dataIn1_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_dataIn1_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal dataIn1_TKEEP_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal regslice_both_dataIn1_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dataIn1_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_dataIn1_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal dataIn1_TSTRB_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal regslice_both_dataIn1_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dataIn1_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_dataIn1_V_last_V_U_apdone_blk : STD_LOGIC;
    signal dataIn1_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_dataIn1_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dataIn1_V_last_V_U_ack_in : STD_LOGIC;
    signal regslice_both_dataIn1_V_dest_V_U_apdone_blk : STD_LOGIC;
    signal dataIn1_TDEST_int_regslice : STD_LOGIC_VECTOR (15 downto 0);
    signal regslice_both_dataIn1_V_dest_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dataIn1_V_dest_V_U_ack_in : STD_LOGIC;
    signal regslice_both_dataIn2_V_data_V_U_apdone_blk : STD_LOGIC;
    signal dataIn2_TDATA_int_regslice : STD_LOGIC_VECTOR (511 downto 0);
    signal dataIn2_TVALID_int_regslice : STD_LOGIC;
    signal dataIn2_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_dataIn2_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_dataIn2_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal dataIn2_TKEEP_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal regslice_both_dataIn2_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dataIn2_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_dataIn2_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal dataIn2_TSTRB_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal regslice_both_dataIn2_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dataIn2_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_dataIn2_V_last_V_U_apdone_blk : STD_LOGIC;
    signal dataIn2_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_dataIn2_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dataIn2_V_last_V_U_ack_in : STD_LOGIC;
    signal regslice_both_dataIn2_V_dest_V_U_apdone_blk : STD_LOGIC;
    signal dataIn2_TDEST_int_regslice : STD_LOGIC_VECTOR (15 downto 0);
    signal regslice_both_dataIn2_V_dest_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dataIn2_V_dest_V_U_ack_in : STD_LOGIC;
    signal regslice_both_dataIn3_V_data_V_U_apdone_blk : STD_LOGIC;
    signal dataIn3_TDATA_int_regslice : STD_LOGIC_VECTOR (511 downto 0);
    signal dataIn3_TVALID_int_regslice : STD_LOGIC;
    signal dataIn3_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_dataIn3_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_dataIn3_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal dataIn3_TKEEP_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal regslice_both_dataIn3_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dataIn3_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_dataIn3_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal dataIn3_TSTRB_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal regslice_both_dataIn3_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dataIn3_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_dataIn3_V_last_V_U_apdone_blk : STD_LOGIC;
    signal dataIn3_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_dataIn3_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dataIn3_V_last_V_U_ack_in : STD_LOGIC;
    signal regslice_both_dataIn3_V_dest_V_U_apdone_blk : STD_LOGIC;
    signal dataIn3_TDEST_int_regslice : STD_LOGIC_VECTOR (15 downto 0);
    signal regslice_both_dataIn3_V_dest_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dataIn3_V_dest_V_U_ack_in : STD_LOGIC;
    signal regslice_both_dataIn4_V_data_V_U_apdone_blk : STD_LOGIC;
    signal dataIn4_TDATA_int_regslice : STD_LOGIC_VECTOR (511 downto 0);
    signal dataIn4_TVALID_int_regslice : STD_LOGIC;
    signal dataIn4_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_dataIn4_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_dataIn4_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal dataIn4_TKEEP_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal regslice_both_dataIn4_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dataIn4_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_dataIn4_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal dataIn4_TSTRB_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal regslice_both_dataIn4_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dataIn4_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_dataIn4_V_last_V_U_apdone_blk : STD_LOGIC;
    signal dataIn4_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_dataIn4_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dataIn4_V_last_V_U_ack_in : STD_LOGIC;
    signal regslice_both_dataIn4_V_dest_V_U_apdone_blk : STD_LOGIC;
    signal dataIn4_TDEST_int_regslice : STD_LOGIC_VECTOR (15 downto 0);
    signal regslice_both_dataIn4_V_dest_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dataIn4_V_dest_V_U_ack_in : STD_LOGIC;
    signal dataOut_TVALID_int_regslice : STD_LOGIC;
    signal dataOut_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_dataOut_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dataOut_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_dataOut_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_dataOut_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dataOut_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_dataOut_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_dataOut_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dataOut_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_dataOut_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_dataOut_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dataOut_V_dest_V_U_apdone_blk : STD_LOGIC;
    signal dataOut_TDEST_int_regslice : STD_LOGIC_VECTOR (15 downto 0);
    signal regslice_both_dataOut_V_dest_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_dataOut_V_dest_V_U_vld_out : STD_LOGIC;
    signal ap_condition_58 : BOOLEAN;
    signal ap_condition_191 : BOOLEAN;
    signal ap_condition_225 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component switchDest_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    regslice_both_dataIn1_V_data_V_U : component switchDest_regslice_both
    generic map (
        DataWidth => 512)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => dataIn1_TDATA,
        vld_in => dataIn1_TVALID,
        ack_in => regslice_both_dataIn1_V_data_V_U_ack_in,
        data_out => dataIn1_TDATA_int_regslice,
        vld_out => dataIn1_TVALID_int_regslice,
        ack_out => dataIn1_TREADY_int_regslice,
        apdone_blk => regslice_both_dataIn1_V_data_V_U_apdone_blk);

    regslice_both_dataIn1_V_keep_V_U : component switchDest_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => dataIn1_TKEEP,
        vld_in => dataIn1_TVALID,
        ack_in => regslice_both_dataIn1_V_keep_V_U_ack_in,
        data_out => dataIn1_TKEEP_int_regslice,
        vld_out => regslice_both_dataIn1_V_keep_V_U_vld_out,
        ack_out => dataIn1_TREADY_int_regslice,
        apdone_blk => regslice_both_dataIn1_V_keep_V_U_apdone_blk);

    regslice_both_dataIn1_V_strb_V_U : component switchDest_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => dataIn1_TSTRB,
        vld_in => dataIn1_TVALID,
        ack_in => regslice_both_dataIn1_V_strb_V_U_ack_in,
        data_out => dataIn1_TSTRB_int_regslice,
        vld_out => regslice_both_dataIn1_V_strb_V_U_vld_out,
        ack_out => dataIn1_TREADY_int_regslice,
        apdone_blk => regslice_both_dataIn1_V_strb_V_U_apdone_blk);

    regslice_both_dataIn1_V_last_V_U : component switchDest_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => dataIn1_TLAST,
        vld_in => dataIn1_TVALID,
        ack_in => regslice_both_dataIn1_V_last_V_U_ack_in,
        data_out => dataIn1_TLAST_int_regslice,
        vld_out => regslice_both_dataIn1_V_last_V_U_vld_out,
        ack_out => dataIn1_TREADY_int_regslice,
        apdone_blk => regslice_both_dataIn1_V_last_V_U_apdone_blk);

    regslice_both_dataIn1_V_dest_V_U : component switchDest_regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => dataIn1_TDEST,
        vld_in => dataIn1_TVALID,
        ack_in => regslice_both_dataIn1_V_dest_V_U_ack_in,
        data_out => dataIn1_TDEST_int_regslice,
        vld_out => regslice_both_dataIn1_V_dest_V_U_vld_out,
        ack_out => dataIn1_TREADY_int_regslice,
        apdone_blk => regslice_both_dataIn1_V_dest_V_U_apdone_blk);

    regslice_both_dataIn2_V_data_V_U : component switchDest_regslice_both
    generic map (
        DataWidth => 512)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => dataIn2_TDATA,
        vld_in => dataIn2_TVALID,
        ack_in => regslice_both_dataIn2_V_data_V_U_ack_in,
        data_out => dataIn2_TDATA_int_regslice,
        vld_out => dataIn2_TVALID_int_regslice,
        ack_out => dataIn2_TREADY_int_regslice,
        apdone_blk => regslice_both_dataIn2_V_data_V_U_apdone_blk);

    regslice_both_dataIn2_V_keep_V_U : component switchDest_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => dataIn2_TKEEP,
        vld_in => dataIn2_TVALID,
        ack_in => regslice_both_dataIn2_V_keep_V_U_ack_in,
        data_out => dataIn2_TKEEP_int_regslice,
        vld_out => regslice_both_dataIn2_V_keep_V_U_vld_out,
        ack_out => dataIn2_TREADY_int_regslice,
        apdone_blk => regslice_both_dataIn2_V_keep_V_U_apdone_blk);

    regslice_both_dataIn2_V_strb_V_U : component switchDest_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => dataIn2_TSTRB,
        vld_in => dataIn2_TVALID,
        ack_in => regslice_both_dataIn2_V_strb_V_U_ack_in,
        data_out => dataIn2_TSTRB_int_regslice,
        vld_out => regslice_both_dataIn2_V_strb_V_U_vld_out,
        ack_out => dataIn2_TREADY_int_regslice,
        apdone_blk => regslice_both_dataIn2_V_strb_V_U_apdone_blk);

    regslice_both_dataIn2_V_last_V_U : component switchDest_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => dataIn2_TLAST,
        vld_in => dataIn2_TVALID,
        ack_in => regslice_both_dataIn2_V_last_V_U_ack_in,
        data_out => dataIn2_TLAST_int_regslice,
        vld_out => regslice_both_dataIn2_V_last_V_U_vld_out,
        ack_out => dataIn2_TREADY_int_regslice,
        apdone_blk => regslice_both_dataIn2_V_last_V_U_apdone_blk);

    regslice_both_dataIn2_V_dest_V_U : component switchDest_regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => dataIn2_TDEST,
        vld_in => dataIn2_TVALID,
        ack_in => regslice_both_dataIn2_V_dest_V_U_ack_in,
        data_out => dataIn2_TDEST_int_regslice,
        vld_out => regslice_both_dataIn2_V_dest_V_U_vld_out,
        ack_out => dataIn2_TREADY_int_regslice,
        apdone_blk => regslice_both_dataIn2_V_dest_V_U_apdone_blk);

    regslice_both_dataIn3_V_data_V_U : component switchDest_regslice_both
    generic map (
        DataWidth => 512)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => dataIn3_TDATA,
        vld_in => dataIn3_TVALID,
        ack_in => regslice_both_dataIn3_V_data_V_U_ack_in,
        data_out => dataIn3_TDATA_int_regslice,
        vld_out => dataIn3_TVALID_int_regslice,
        ack_out => dataIn3_TREADY_int_regslice,
        apdone_blk => regslice_both_dataIn3_V_data_V_U_apdone_blk);

    regslice_both_dataIn3_V_keep_V_U : component switchDest_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => dataIn3_TKEEP,
        vld_in => dataIn3_TVALID,
        ack_in => regslice_both_dataIn3_V_keep_V_U_ack_in,
        data_out => dataIn3_TKEEP_int_regslice,
        vld_out => regslice_both_dataIn3_V_keep_V_U_vld_out,
        ack_out => dataIn3_TREADY_int_regslice,
        apdone_blk => regslice_both_dataIn3_V_keep_V_U_apdone_blk);

    regslice_both_dataIn3_V_strb_V_U : component switchDest_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => dataIn3_TSTRB,
        vld_in => dataIn3_TVALID,
        ack_in => regslice_both_dataIn3_V_strb_V_U_ack_in,
        data_out => dataIn3_TSTRB_int_regslice,
        vld_out => regslice_both_dataIn3_V_strb_V_U_vld_out,
        ack_out => dataIn3_TREADY_int_regslice,
        apdone_blk => regslice_both_dataIn3_V_strb_V_U_apdone_blk);

    regslice_both_dataIn3_V_last_V_U : component switchDest_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => dataIn3_TLAST,
        vld_in => dataIn3_TVALID,
        ack_in => regslice_both_dataIn3_V_last_V_U_ack_in,
        data_out => dataIn3_TLAST_int_regslice,
        vld_out => regslice_both_dataIn3_V_last_V_U_vld_out,
        ack_out => dataIn3_TREADY_int_regslice,
        apdone_blk => regslice_both_dataIn3_V_last_V_U_apdone_blk);

    regslice_both_dataIn3_V_dest_V_U : component switchDest_regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => dataIn3_TDEST,
        vld_in => dataIn3_TVALID,
        ack_in => regslice_both_dataIn3_V_dest_V_U_ack_in,
        data_out => dataIn3_TDEST_int_regslice,
        vld_out => regslice_both_dataIn3_V_dest_V_U_vld_out,
        ack_out => dataIn3_TREADY_int_regslice,
        apdone_blk => regslice_both_dataIn3_V_dest_V_U_apdone_blk);

    regslice_both_dataIn4_V_data_V_U : component switchDest_regslice_both
    generic map (
        DataWidth => 512)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => dataIn4_TDATA,
        vld_in => dataIn4_TVALID,
        ack_in => regslice_both_dataIn4_V_data_V_U_ack_in,
        data_out => dataIn4_TDATA_int_regslice,
        vld_out => dataIn4_TVALID_int_regslice,
        ack_out => dataIn4_TREADY_int_regslice,
        apdone_blk => regslice_both_dataIn4_V_data_V_U_apdone_blk);

    regslice_both_dataIn4_V_keep_V_U : component switchDest_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => dataIn4_TKEEP,
        vld_in => dataIn4_TVALID,
        ack_in => regslice_both_dataIn4_V_keep_V_U_ack_in,
        data_out => dataIn4_TKEEP_int_regslice,
        vld_out => regslice_both_dataIn4_V_keep_V_U_vld_out,
        ack_out => dataIn4_TREADY_int_regslice,
        apdone_blk => regslice_both_dataIn4_V_keep_V_U_apdone_blk);

    regslice_both_dataIn4_V_strb_V_U : component switchDest_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => dataIn4_TSTRB,
        vld_in => dataIn4_TVALID,
        ack_in => regslice_both_dataIn4_V_strb_V_U_ack_in,
        data_out => dataIn4_TSTRB_int_regslice,
        vld_out => regslice_both_dataIn4_V_strb_V_U_vld_out,
        ack_out => dataIn4_TREADY_int_regslice,
        apdone_blk => regslice_both_dataIn4_V_strb_V_U_apdone_blk);

    regslice_both_dataIn4_V_last_V_U : component switchDest_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => dataIn4_TLAST,
        vld_in => dataIn4_TVALID,
        ack_in => regslice_both_dataIn4_V_last_V_U_ack_in,
        data_out => dataIn4_TLAST_int_regslice,
        vld_out => regslice_both_dataIn4_V_last_V_U_vld_out,
        ack_out => dataIn4_TREADY_int_regslice,
        apdone_blk => regslice_both_dataIn4_V_last_V_U_apdone_blk);

    regslice_both_dataIn4_V_dest_V_U : component switchDest_regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => dataIn4_TDEST,
        vld_in => dataIn4_TVALID,
        ack_in => regslice_both_dataIn4_V_dest_V_U_ack_in,
        data_out => dataIn4_TDEST_int_regslice,
        vld_out => regslice_both_dataIn4_V_dest_V_U_vld_out,
        ack_out => dataIn4_TREADY_int_regslice,
        apdone_blk => regslice_both_dataIn4_V_dest_V_U_apdone_blk);

    regslice_both_dataOut_V_data_V_U : component switchDest_regslice_both
    generic map (
        DataWidth => 512)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_phi_reg_pp0_iter1_tmp_data_4_reg_183,
        vld_in => dataOut_TVALID_int_regslice,
        ack_in => dataOut_TREADY_int_regslice,
        data_out => dataOut_TDATA,
        vld_out => regslice_both_dataOut_V_data_V_U_vld_out,
        ack_out => dataOut_TREADY,
        apdone_blk => regslice_both_dataOut_V_data_V_U_apdone_blk);

    regslice_both_dataOut_V_keep_V_U : component switchDest_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_phi_reg_pp0_iter1_tmp_keep_4_reg_199,
        vld_in => dataOut_TVALID_int_regslice,
        ack_in => regslice_both_dataOut_V_keep_V_U_ack_in_dummy,
        data_out => dataOut_TKEEP,
        vld_out => regslice_both_dataOut_V_keep_V_U_vld_out,
        ack_out => dataOut_TREADY,
        apdone_blk => regslice_both_dataOut_V_keep_V_U_apdone_blk);

    regslice_both_dataOut_V_strb_V_U : component switchDest_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_phi_reg_pp0_iter1_tmp_strb_4_reg_215,
        vld_in => dataOut_TVALID_int_regslice,
        ack_in => regslice_both_dataOut_V_strb_V_U_ack_in_dummy,
        data_out => dataOut_TSTRB,
        vld_out => regslice_both_dataOut_V_strb_V_U_vld_out,
        ack_out => dataOut_TREADY,
        apdone_blk => regslice_both_dataOut_V_strb_V_U_apdone_blk);

    regslice_both_dataOut_V_last_V_U : component switchDest_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_phi_reg_pp0_iter1_tmp_last_4_reg_231,
        vld_in => dataOut_TVALID_int_regslice,
        ack_in => regslice_both_dataOut_V_last_V_U_ack_in_dummy,
        data_out => dataOut_TLAST,
        vld_out => regslice_both_dataOut_V_last_V_U_vld_out,
        ack_out => dataOut_TREADY,
        apdone_blk => regslice_both_dataOut_V_last_V_U_apdone_blk);

    regslice_both_dataOut_V_dest_V_U : component switchDest_regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => dataOut_TDEST_int_regslice,
        vld_in => dataOut_TVALID_int_regslice,
        ack_in => regslice_both_dataOut_V_dest_V_U_ack_in_dummy,
        data_out => dataOut_TDEST,
        vld_out => regslice_both_dataOut_V_dest_V_U_vld_out,
        ack_out => dataOut_TREADY,
        apdone_blk => regslice_both_dataOut_V_dest_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_tmp_data_4_reg_183_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_phi_reg_pp0_iter1_tmp_data_4_reg_183 <= ap_const_lv512_lc_1;
            else
                if ((ap_const_boolean_1 = ap_condition_191)) then
                    if ((ap_const_boolean_1 = ap_condition_58)) then 
                        ap_phi_reg_pp0_iter1_tmp_data_4_reg_183 <= dataIn4_TDATA_int_regslice;
                    elsif ((dest_mem = ap_const_lv3_3)) then 
                        ap_phi_reg_pp0_iter1_tmp_data_4_reg_183 <= dataIn3_TDATA_int_regslice;
                    elsif ((dest_mem = ap_const_lv3_2)) then 
                        ap_phi_reg_pp0_iter1_tmp_data_4_reg_183 <= dataIn2_TDATA_int_regslice;
                    elsif ((dest_mem = ap_const_lv3_1)) then 
                        ap_phi_reg_pp0_iter1_tmp_data_4_reg_183 <= dataIn1_TDATA_int_regslice;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_phi_reg_pp0_iter1_tmp_data_4_reg_183 <= ap_phi_reg_pp0_iter0_tmp_data_4_reg_183;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_tmp_dest_reg_247_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_phi_reg_pp0_iter1_tmp_dest_reg_247 <= ap_const_lv2_0;
            else
                if ((ap_const_boolean_1 = ap_condition_191)) then
                    if ((ap_const_boolean_1 = ap_condition_58)) then 
                        ap_phi_reg_pp0_iter1_tmp_dest_reg_247 <= ap_const_lv2_3;
                    elsif ((dest_mem = ap_const_lv3_3)) then 
                        ap_phi_reg_pp0_iter1_tmp_dest_reg_247 <= ap_const_lv2_2;
                    elsif ((dest_mem = ap_const_lv3_2)) then 
                        ap_phi_reg_pp0_iter1_tmp_dest_reg_247 <= ap_const_lv2_1;
                    elsif ((dest_mem = ap_const_lv3_1)) then 
                        ap_phi_reg_pp0_iter1_tmp_dest_reg_247 <= ap_const_lv2_0;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_phi_reg_pp0_iter1_tmp_dest_reg_247 <= ap_phi_reg_pp0_iter0_tmp_dest_reg_247;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_tmp_keep_4_reg_199_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_phi_reg_pp0_iter1_tmp_keep_4_reg_199 <= ap_const_lv64_0;
            else
                if ((ap_const_boolean_1 = ap_condition_191)) then
                    if ((ap_const_boolean_1 = ap_condition_58)) then 
                        ap_phi_reg_pp0_iter1_tmp_keep_4_reg_199 <= dataIn4_TKEEP_int_regslice;
                    elsif ((dest_mem = ap_const_lv3_3)) then 
                        ap_phi_reg_pp0_iter1_tmp_keep_4_reg_199 <= dataIn3_TKEEP_int_regslice;
                    elsif ((dest_mem = ap_const_lv3_2)) then 
                        ap_phi_reg_pp0_iter1_tmp_keep_4_reg_199 <= dataIn2_TKEEP_int_regslice;
                    elsif ((dest_mem = ap_const_lv3_1)) then 
                        ap_phi_reg_pp0_iter1_tmp_keep_4_reg_199 <= dataIn1_TKEEP_int_regslice;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_phi_reg_pp0_iter1_tmp_keep_4_reg_199 <= ap_phi_reg_pp0_iter0_tmp_keep_4_reg_199;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_tmp_last_4_reg_231_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_phi_reg_pp0_iter1_tmp_last_4_reg_231 <= ap_const_lv1_0;
            else
                if ((ap_const_boolean_1 = ap_condition_191)) then
                    if ((ap_const_boolean_1 = ap_condition_58)) then 
                        ap_phi_reg_pp0_iter1_tmp_last_4_reg_231 <= dataIn4_TLAST_int_regslice;
                    elsif ((dest_mem = ap_const_lv3_3)) then 
                        ap_phi_reg_pp0_iter1_tmp_last_4_reg_231 <= dataIn3_TLAST_int_regslice;
                    elsif ((dest_mem = ap_const_lv3_2)) then 
                        ap_phi_reg_pp0_iter1_tmp_last_4_reg_231 <= dataIn2_TLAST_int_regslice;
                    elsif ((dest_mem = ap_const_lv3_1)) then 
                        ap_phi_reg_pp0_iter1_tmp_last_4_reg_231 <= dataIn1_TLAST_int_regslice;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_phi_reg_pp0_iter1_tmp_last_4_reg_231 <= ap_phi_reg_pp0_iter0_tmp_last_4_reg_231;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_tmp_strb_4_reg_215_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_phi_reg_pp0_iter1_tmp_strb_4_reg_215 <= ap_const_lv64_0;
            else
                if ((ap_const_boolean_1 = ap_condition_191)) then
                    if ((ap_const_boolean_1 = ap_condition_58)) then 
                        ap_phi_reg_pp0_iter1_tmp_strb_4_reg_215 <= dataIn4_TSTRB_int_regslice;
                    elsif ((dest_mem = ap_const_lv3_3)) then 
                        ap_phi_reg_pp0_iter1_tmp_strb_4_reg_215 <= dataIn3_TSTRB_int_regslice;
                    elsif ((dest_mem = ap_const_lv3_2)) then 
                        ap_phi_reg_pp0_iter1_tmp_strb_4_reg_215 <= dataIn2_TSTRB_int_regslice;
                    elsif ((dest_mem = ap_const_lv3_1)) then 
                        ap_phi_reg_pp0_iter1_tmp_strb_4_reg_215 <= dataIn1_TSTRB_int_regslice;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_phi_reg_pp0_iter1_tmp_strb_4_reg_215 <= ap_phi_reg_pp0_iter0_tmp_strb_4_reg_215;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    dest_mem_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                dest_mem <= ap_const_lv3_0;
            else
                if ((ap_const_boolean_1 = ap_condition_191)) then
                    if ((ap_const_boolean_1 = ap_condition_225)) then 
                        dest_mem <= ap_const_lv3_1;
                    elsif (((dest_mem = ap_const_lv3_1) and (tmp_last_1_fu_328_p1 = ap_const_lv1_1))) then 
                        dest_mem <= ap_const_lv3_2;
                    elsif (((dest_mem = ap_const_lv3_2) and (tmp_last_2_fu_306_p1 = ap_const_lv1_1))) then 
                        dest_mem <= ap_const_lv3_3;
                    elsif (((dest_mem = ap_const_lv3_3) and (tmp_last_3_fu_284_p1 = ap_const_lv1_1))) then 
                        dest_mem <= ap_const_lv3_4;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_state1_pp0_stage0_iter0, ap_block_state2_pp0_stage0_iter1, ap_block_state3_pp0_stage0_iter2)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1)) or ((ap_start = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_state1_pp0_stage0_iter0, ap_block_state2_pp0_stage0_iter1, ap_block_state3_pp0_stage0_iter2, dataOut_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((dataOut_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((dataOut_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1))) or ((ap_start = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_state1_pp0_stage0_iter0, ap_block_state2_pp0_stage0_iter1, ap_block_state3_pp0_stage0_iter2, dataOut_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((dataOut_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state3_pp0_stage0_iter2))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((dataOut_TREADY_int_regslice = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state2_pp0_stage0_iter1))) or ((ap_start = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_predicate_op70_read_state1, dest_mem, dataIn1_TVALID_int_regslice, dataIn2_TVALID_int_regslice, dataIn3_TVALID_int_regslice, dataIn4_TVALID_int_regslice)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (((ap_predicate_op70_read_state1 = ap_const_boolean_1) and (dataIn4_TVALID_int_regslice = ap_const_logic_0)) or ((dataIn3_TVALID_int_regslice = ap_const_logic_0) and (dest_mem = ap_const_lv3_3)) or ((dataIn2_TVALID_int_regslice = ap_const_logic_0) and (dest_mem = ap_const_lv3_2)) or ((dataIn1_TVALID_int_regslice = ap_const_logic_0) and (dest_mem = ap_const_lv3_1)));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(dataOut_TREADY_int_regslice)
    begin
                ap_block_state2_pp0_stage0_iter1 <= (dataOut_TREADY_int_regslice = ap_const_logic_0);
    end process;


    ap_block_state3_pp0_stage0_iter2_assign_proc : process(regslice_both_dataOut_V_data_V_U_apdone_blk, dataOut_TREADY_int_regslice)
    begin
                ap_block_state3_pp0_stage0_iter2 <= ((regslice_both_dataOut_V_data_V_U_apdone_blk = ap_const_logic_1) or (dataOut_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_condition_191_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_191 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_225_assign_proc : process(dest_mem, tmp_last_fu_350_p1)
    begin
                ap_condition_225 <= (not((dest_mem = ap_const_lv3_1)) and not((dest_mem = ap_const_lv3_2)) and not((dest_mem = ap_const_lv3_3)) and (tmp_last_fu_350_p1 = ap_const_lv1_1));
    end process;


    ap_condition_58_assign_proc : process(dest_mem)
    begin
                ap_condition_58 <= (not((dest_mem = ap_const_lv3_1)) and not((dest_mem = ap_const_lv3_2)) and not((dest_mem = ap_const_lv3_3)));
    end process;


    ap_done_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_tmp_data_4_reg_183 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_tmp_dest_reg_247 <= "XX";
    ap_phi_reg_pp0_iter0_tmp_keep_4_reg_199 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_tmp_last_4_reg_231 <= "X";
    ap_phi_reg_pp0_iter0_tmp_strb_4_reg_215 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op70_read_state1_assign_proc : process(dest_mem)
    begin
                ap_predicate_op70_read_state1 <= (not((dest_mem = ap_const_lv3_1)) and not((dest_mem = ap_const_lv3_2)) and not((dest_mem = ap_const_lv3_3)));
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to1 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    dataIn1_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, dest_mem, ap_block_pp0_stage0, dataIn1_TVALID_int_regslice)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (dest_mem = ap_const_lv3_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dataIn1_TDATA_blk_n <= dataIn1_TVALID_int_regslice;
        else 
            dataIn1_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dataIn1_TREADY <= regslice_both_dataIn1_V_data_V_U_ack_in;

    dataIn1_TREADY_int_regslice_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, dest_mem, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (dest_mem = ap_const_lv3_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dataIn1_TREADY_int_regslice <= ap_const_logic_1;
        else 
            dataIn1_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    dataIn2_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, dest_mem, ap_block_pp0_stage0, dataIn2_TVALID_int_regslice)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (dest_mem = ap_const_lv3_2) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dataIn2_TDATA_blk_n <= dataIn2_TVALID_int_regslice;
        else 
            dataIn2_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dataIn2_TREADY <= regslice_both_dataIn2_V_data_V_U_ack_in;

    dataIn2_TREADY_int_regslice_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, dest_mem, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (dest_mem = ap_const_lv3_2) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dataIn2_TREADY_int_regslice <= ap_const_logic_1;
        else 
            dataIn2_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    dataIn3_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, dest_mem, ap_block_pp0_stage0, dataIn3_TVALID_int_regslice)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (dest_mem = ap_const_lv3_3) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dataIn3_TDATA_blk_n <= dataIn3_TVALID_int_regslice;
        else 
            dataIn3_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dataIn3_TREADY <= regslice_both_dataIn3_V_data_V_U_ack_in;

    dataIn3_TREADY_int_regslice_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, dest_mem, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (dest_mem = ap_const_lv3_3) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dataIn3_TREADY_int_regslice <= ap_const_logic_1;
        else 
            dataIn3_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    dataIn4_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op70_read_state1, ap_block_pp0_stage0, dataIn4_TVALID_int_regslice)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op70_read_state1 = ap_const_boolean_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dataIn4_TDATA_blk_n <= dataIn4_TVALID_int_regslice;
        else 
            dataIn4_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dataIn4_TREADY <= regslice_both_dataIn4_V_data_V_U_ack_in;

    dataIn4_TREADY_int_regslice_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op70_read_state1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op70_read_state1 = ap_const_boolean_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dataIn4_TREADY_int_regslice <= ap_const_logic_1;
        else 
            dataIn4_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    dataOut_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, dataOut_TREADY_int_regslice)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            dataOut_TDATA_blk_n <= dataOut_TREADY_int_regslice;
        else 
            dataOut_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dataOut_TDEST_int_regslice <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_reg_pp0_iter1_tmp_dest_reg_247),16));
    dataOut_TVALID <= regslice_both_dataOut_V_data_V_U_vld_out;

    dataOut_TVALID_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dataOut_TVALID_int_regslice <= ap_const_logic_1;
        else 
            dataOut_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    tmp_last_1_fu_328_p1 <= dataIn1_TLAST_int_regslice;
    tmp_last_2_fu_306_p1 <= dataIn2_TLAST_int_regslice;
    tmp_last_3_fu_284_p1 <= dataIn3_TLAST_int_regslice;
    tmp_last_fu_350_p1 <= dataIn4_TLAST_int_regslice;
end behav;
