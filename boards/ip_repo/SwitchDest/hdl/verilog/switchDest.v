// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="switchDest_switchDest,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu48dr-ffvg1517-2-e,HLS_INPUT_CLOCK=3.500000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=2.550187,HLS_SYN_LAT=2,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=649,HLS_SYN_LUT=211,HLS_VERSION=2023_2}" *)

module switchDest (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        dataIn3_TVALID,
        dataIn2_TVALID,
        dataIn1_TVALID,
        dataIn4_TVALID,
        dataOut_TREADY,
        dataIn1_TDATA,
        dataIn1_TREADY,
        dataIn1_TKEEP,
        dataIn1_TSTRB,
        dataIn1_TLAST,
        dataIn1_TDEST,
        dataIn2_TDATA,
        dataIn2_TREADY,
        dataIn2_TKEEP,
        dataIn2_TSTRB,
        dataIn2_TLAST,
        dataIn2_TDEST,
        dataIn3_TDATA,
        dataIn3_TREADY,
        dataIn3_TKEEP,
        dataIn3_TSTRB,
        dataIn3_TLAST,
        dataIn3_TDEST,
        dataIn4_TDATA,
        dataIn4_TREADY,
        dataIn4_TKEEP,
        dataIn4_TSTRB,
        dataIn4_TLAST,
        dataIn4_TDEST,
        dataOut_TDATA,
        dataOut_TVALID,
        dataOut_TKEEP,
        dataOut_TSTRB,
        dataOut_TLAST,
        dataOut_TDEST
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   dataIn3_TVALID;
input   dataIn2_TVALID;
input   dataIn1_TVALID;
input   dataIn4_TVALID;
input   dataOut_TREADY;
input  [511:0] dataIn1_TDATA;
output   dataIn1_TREADY;
input  [63:0] dataIn1_TKEEP;
input  [63:0] dataIn1_TSTRB;
input  [0:0] dataIn1_TLAST;
input  [15:0] dataIn1_TDEST;
input  [511:0] dataIn2_TDATA;
output   dataIn2_TREADY;
input  [63:0] dataIn2_TKEEP;
input  [63:0] dataIn2_TSTRB;
input  [0:0] dataIn2_TLAST;
input  [15:0] dataIn2_TDEST;
input  [511:0] dataIn3_TDATA;
output   dataIn3_TREADY;
input  [63:0] dataIn3_TKEEP;
input  [63:0] dataIn3_TSTRB;
input  [0:0] dataIn3_TLAST;
input  [15:0] dataIn3_TDEST;
input  [511:0] dataIn4_TDATA;
output   dataIn4_TREADY;
input  [63:0] dataIn4_TKEEP;
input  [63:0] dataIn4_TSTRB;
input  [0:0] dataIn4_TLAST;
input  [15:0] dataIn4_TDEST;
output  [511:0] dataOut_TDATA;
output   dataOut_TVALID;
output  [63:0] dataOut_TKEEP;
output  [63:0] dataOut_TSTRB;
output  [0:0] dataOut_TLAST;
output  [15:0] dataOut_TDEST;

reg ap_done;
reg ap_idle;
reg ap_ready;

 reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
reg    ap_predicate_op70_read_state1;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state2_pp0_stage0_iter1;
wire    regslice_both_dataOut_V_data_V_U_apdone_blk;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_subdone;
reg   [2:0] dest_mem;
reg    dataIn1_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    dataIn2_TDATA_blk_n;
reg    dataIn3_TDATA_blk_n;
reg    dataIn4_TDATA_blk_n;
reg    dataOut_TDATA_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] tmp_last_3_fu_284_p1;
wire   [0:0] tmp_last_2_fu_306_p1;
wire   [0:0] tmp_last_1_fu_328_p1;
wire   [0:0] tmp_last_fu_350_p1;
wire   [511:0] ap_phi_reg_pp0_iter0_tmp_data_4_reg_183;
reg   [511:0] ap_phi_reg_pp0_iter1_tmp_data_4_reg_183;
wire   [63:0] ap_phi_reg_pp0_iter0_tmp_keep_4_reg_199;
reg   [63:0] ap_phi_reg_pp0_iter1_tmp_keep_4_reg_199;
wire   [63:0] ap_phi_reg_pp0_iter0_tmp_strb_4_reg_215;
reg   [63:0] ap_phi_reg_pp0_iter1_tmp_strb_4_reg_215;
wire   [0:0] ap_phi_reg_pp0_iter0_tmp_last_4_reg_231;
reg   [0:0] ap_phi_reg_pp0_iter1_tmp_last_4_reg_231;
wire   [1:0] ap_phi_reg_pp0_iter0_tmp_dest_reg_247;
reg   [1:0] ap_phi_reg_pp0_iter1_tmp_dest_reg_247;
reg    ap_block_pp0_stage0_01001;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to1;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire    regslice_both_dataIn1_V_data_V_U_apdone_blk;
wire   [511:0] dataIn1_TDATA_int_regslice;
wire    dataIn1_TVALID_int_regslice;
reg    dataIn1_TREADY_int_regslice;
wire    regslice_both_dataIn1_V_data_V_U_ack_in;
wire    regslice_both_dataIn1_V_keep_V_U_apdone_blk;
wire   [63:0] dataIn1_TKEEP_int_regslice;
wire    regslice_both_dataIn1_V_keep_V_U_vld_out;
wire    regslice_both_dataIn1_V_keep_V_U_ack_in;
wire    regslice_both_dataIn1_V_strb_V_U_apdone_blk;
wire   [63:0] dataIn1_TSTRB_int_regslice;
wire    regslice_both_dataIn1_V_strb_V_U_vld_out;
wire    regslice_both_dataIn1_V_strb_V_U_ack_in;
wire    regslice_both_dataIn1_V_last_V_U_apdone_blk;
wire   [0:0] dataIn1_TLAST_int_regslice;
wire    regslice_both_dataIn1_V_last_V_U_vld_out;
wire    regslice_both_dataIn1_V_last_V_U_ack_in;
wire    regslice_both_dataIn1_V_dest_V_U_apdone_blk;
wire   [15:0] dataIn1_TDEST_int_regslice;
wire    regslice_both_dataIn1_V_dest_V_U_vld_out;
wire    regslice_both_dataIn1_V_dest_V_U_ack_in;
wire    regslice_both_dataIn2_V_data_V_U_apdone_blk;
wire   [511:0] dataIn2_TDATA_int_regslice;
wire    dataIn2_TVALID_int_regslice;
reg    dataIn2_TREADY_int_regslice;
wire    regslice_both_dataIn2_V_data_V_U_ack_in;
wire    regslice_both_dataIn2_V_keep_V_U_apdone_blk;
wire   [63:0] dataIn2_TKEEP_int_regslice;
wire    regslice_both_dataIn2_V_keep_V_U_vld_out;
wire    regslice_both_dataIn2_V_keep_V_U_ack_in;
wire    regslice_both_dataIn2_V_strb_V_U_apdone_blk;
wire   [63:0] dataIn2_TSTRB_int_regslice;
wire    regslice_both_dataIn2_V_strb_V_U_vld_out;
wire    regslice_both_dataIn2_V_strb_V_U_ack_in;
wire    regslice_both_dataIn2_V_last_V_U_apdone_blk;
wire   [0:0] dataIn2_TLAST_int_regslice;
wire    regslice_both_dataIn2_V_last_V_U_vld_out;
wire    regslice_both_dataIn2_V_last_V_U_ack_in;
wire    regslice_both_dataIn2_V_dest_V_U_apdone_blk;
wire   [15:0] dataIn2_TDEST_int_regslice;
wire    regslice_both_dataIn2_V_dest_V_U_vld_out;
wire    regslice_both_dataIn2_V_dest_V_U_ack_in;
wire    regslice_both_dataIn3_V_data_V_U_apdone_blk;
wire   [511:0] dataIn3_TDATA_int_regslice;
wire    dataIn3_TVALID_int_regslice;
reg    dataIn3_TREADY_int_regslice;
wire    regslice_both_dataIn3_V_data_V_U_ack_in;
wire    regslice_both_dataIn3_V_keep_V_U_apdone_blk;
wire   [63:0] dataIn3_TKEEP_int_regslice;
wire    regslice_both_dataIn3_V_keep_V_U_vld_out;
wire    regslice_both_dataIn3_V_keep_V_U_ack_in;
wire    regslice_both_dataIn3_V_strb_V_U_apdone_blk;
wire   [63:0] dataIn3_TSTRB_int_regslice;
wire    regslice_both_dataIn3_V_strb_V_U_vld_out;
wire    regslice_both_dataIn3_V_strb_V_U_ack_in;
wire    regslice_both_dataIn3_V_last_V_U_apdone_blk;
wire   [0:0] dataIn3_TLAST_int_regslice;
wire    regslice_both_dataIn3_V_last_V_U_vld_out;
wire    regslice_both_dataIn3_V_last_V_U_ack_in;
wire    regslice_both_dataIn3_V_dest_V_U_apdone_blk;
wire   [15:0] dataIn3_TDEST_int_regslice;
wire    regslice_both_dataIn3_V_dest_V_U_vld_out;
wire    regslice_both_dataIn3_V_dest_V_U_ack_in;
wire    regslice_both_dataIn4_V_data_V_U_apdone_blk;
wire   [511:0] dataIn4_TDATA_int_regslice;
wire    dataIn4_TVALID_int_regslice;
reg    dataIn4_TREADY_int_regslice;
wire    regslice_both_dataIn4_V_data_V_U_ack_in;
wire    regslice_both_dataIn4_V_keep_V_U_apdone_blk;
wire   [63:0] dataIn4_TKEEP_int_regslice;
wire    regslice_both_dataIn4_V_keep_V_U_vld_out;
wire    regslice_both_dataIn4_V_keep_V_U_ack_in;
wire    regslice_both_dataIn4_V_strb_V_U_apdone_blk;
wire   [63:0] dataIn4_TSTRB_int_regslice;
wire    regslice_both_dataIn4_V_strb_V_U_vld_out;
wire    regslice_both_dataIn4_V_strb_V_U_ack_in;
wire    regslice_both_dataIn4_V_last_V_U_apdone_blk;
wire   [0:0] dataIn4_TLAST_int_regslice;
wire    regslice_both_dataIn4_V_last_V_U_vld_out;
wire    regslice_both_dataIn4_V_last_V_U_ack_in;
wire    regslice_both_dataIn4_V_dest_V_U_apdone_blk;
wire   [15:0] dataIn4_TDEST_int_regslice;
wire    regslice_both_dataIn4_V_dest_V_U_vld_out;
wire    regslice_both_dataIn4_V_dest_V_U_ack_in;
reg    dataOut_TVALID_int_regslice;
wire    dataOut_TREADY_int_regslice;
wire    regslice_both_dataOut_V_data_V_U_vld_out;
wire    regslice_both_dataOut_V_keep_V_U_apdone_blk;
wire    regslice_both_dataOut_V_keep_V_U_ack_in_dummy;
wire    regslice_both_dataOut_V_keep_V_U_vld_out;
wire    regslice_both_dataOut_V_strb_V_U_apdone_blk;
wire    regslice_both_dataOut_V_strb_V_U_ack_in_dummy;
wire    regslice_both_dataOut_V_strb_V_U_vld_out;
wire    regslice_both_dataOut_V_last_V_U_apdone_blk;
wire    regslice_both_dataOut_V_last_V_U_ack_in_dummy;
wire    regslice_both_dataOut_V_last_V_U_vld_out;
wire    regslice_both_dataOut_V_dest_V_U_apdone_blk;
wire   [15:0] dataOut_TDEST_int_regslice;
wire    regslice_both_dataOut_V_dest_V_U_ack_in_dummy;
wire    regslice_both_dataOut_V_dest_V_U_vld_out;
reg    ap_condition_58;
reg    ap_condition_191;
reg    ap_condition_225;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 dest_mem = 3'd0;
#0 ap_phi_reg_pp0_iter1_tmp_data_4_reg_183 = 512'd0;
#0 ap_phi_reg_pp0_iter1_tmp_keep_4_reg_199 = 64'd0;
#0 ap_phi_reg_pp0_iter1_tmp_strb_4_reg_215 = 64'd0;
#0 ap_phi_reg_pp0_iter1_tmp_last_4_reg_231 = 1'd0;
#0 ap_phi_reg_pp0_iter1_tmp_dest_reg_247 = 2'd0;
end

switchDest_regslice_both #(
    .DataWidth( 512 ))
regslice_both_dataIn1_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(dataIn1_TDATA),
    .vld_in(dataIn1_TVALID),
    .ack_in(regslice_both_dataIn1_V_data_V_U_ack_in),
    .data_out(dataIn1_TDATA_int_regslice),
    .vld_out(dataIn1_TVALID_int_regslice),
    .ack_out(dataIn1_TREADY_int_regslice),
    .apdone_blk(regslice_both_dataIn1_V_data_V_U_apdone_blk)
);

switchDest_regslice_both #(
    .DataWidth( 64 ))
regslice_both_dataIn1_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(dataIn1_TKEEP),
    .vld_in(dataIn1_TVALID),
    .ack_in(regslice_both_dataIn1_V_keep_V_U_ack_in),
    .data_out(dataIn1_TKEEP_int_regslice),
    .vld_out(regslice_both_dataIn1_V_keep_V_U_vld_out),
    .ack_out(dataIn1_TREADY_int_regslice),
    .apdone_blk(regslice_both_dataIn1_V_keep_V_U_apdone_blk)
);

switchDest_regslice_both #(
    .DataWidth( 64 ))
regslice_both_dataIn1_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(dataIn1_TSTRB),
    .vld_in(dataIn1_TVALID),
    .ack_in(regslice_both_dataIn1_V_strb_V_U_ack_in),
    .data_out(dataIn1_TSTRB_int_regslice),
    .vld_out(regslice_both_dataIn1_V_strb_V_U_vld_out),
    .ack_out(dataIn1_TREADY_int_regslice),
    .apdone_blk(regslice_both_dataIn1_V_strb_V_U_apdone_blk)
);

switchDest_regslice_both #(
    .DataWidth( 1 ))
regslice_both_dataIn1_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(dataIn1_TLAST),
    .vld_in(dataIn1_TVALID),
    .ack_in(regslice_both_dataIn1_V_last_V_U_ack_in),
    .data_out(dataIn1_TLAST_int_regslice),
    .vld_out(regslice_both_dataIn1_V_last_V_U_vld_out),
    .ack_out(dataIn1_TREADY_int_regslice),
    .apdone_blk(regslice_both_dataIn1_V_last_V_U_apdone_blk)
);

switchDest_regslice_both #(
    .DataWidth( 16 ))
regslice_both_dataIn1_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(dataIn1_TDEST),
    .vld_in(dataIn1_TVALID),
    .ack_in(regslice_both_dataIn1_V_dest_V_U_ack_in),
    .data_out(dataIn1_TDEST_int_regslice),
    .vld_out(regslice_both_dataIn1_V_dest_V_U_vld_out),
    .ack_out(dataIn1_TREADY_int_regslice),
    .apdone_blk(regslice_both_dataIn1_V_dest_V_U_apdone_blk)
);

switchDest_regslice_both #(
    .DataWidth( 512 ))
regslice_both_dataIn2_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(dataIn2_TDATA),
    .vld_in(dataIn2_TVALID),
    .ack_in(regslice_both_dataIn2_V_data_V_U_ack_in),
    .data_out(dataIn2_TDATA_int_regslice),
    .vld_out(dataIn2_TVALID_int_regslice),
    .ack_out(dataIn2_TREADY_int_regslice),
    .apdone_blk(regslice_both_dataIn2_V_data_V_U_apdone_blk)
);

switchDest_regslice_both #(
    .DataWidth( 64 ))
regslice_both_dataIn2_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(dataIn2_TKEEP),
    .vld_in(dataIn2_TVALID),
    .ack_in(regslice_both_dataIn2_V_keep_V_U_ack_in),
    .data_out(dataIn2_TKEEP_int_regslice),
    .vld_out(regslice_both_dataIn2_V_keep_V_U_vld_out),
    .ack_out(dataIn2_TREADY_int_regslice),
    .apdone_blk(regslice_both_dataIn2_V_keep_V_U_apdone_blk)
);

switchDest_regslice_both #(
    .DataWidth( 64 ))
regslice_both_dataIn2_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(dataIn2_TSTRB),
    .vld_in(dataIn2_TVALID),
    .ack_in(regslice_both_dataIn2_V_strb_V_U_ack_in),
    .data_out(dataIn2_TSTRB_int_regslice),
    .vld_out(regslice_both_dataIn2_V_strb_V_U_vld_out),
    .ack_out(dataIn2_TREADY_int_regslice),
    .apdone_blk(regslice_both_dataIn2_V_strb_V_U_apdone_blk)
);

switchDest_regslice_both #(
    .DataWidth( 1 ))
regslice_both_dataIn2_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(dataIn2_TLAST),
    .vld_in(dataIn2_TVALID),
    .ack_in(regslice_both_dataIn2_V_last_V_U_ack_in),
    .data_out(dataIn2_TLAST_int_regslice),
    .vld_out(regslice_both_dataIn2_V_last_V_U_vld_out),
    .ack_out(dataIn2_TREADY_int_regslice),
    .apdone_blk(regslice_both_dataIn2_V_last_V_U_apdone_blk)
);

switchDest_regslice_both #(
    .DataWidth( 16 ))
regslice_both_dataIn2_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(dataIn2_TDEST),
    .vld_in(dataIn2_TVALID),
    .ack_in(regslice_both_dataIn2_V_dest_V_U_ack_in),
    .data_out(dataIn2_TDEST_int_regslice),
    .vld_out(regslice_both_dataIn2_V_dest_V_U_vld_out),
    .ack_out(dataIn2_TREADY_int_regslice),
    .apdone_blk(regslice_both_dataIn2_V_dest_V_U_apdone_blk)
);

switchDest_regslice_both #(
    .DataWidth( 512 ))
regslice_both_dataIn3_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(dataIn3_TDATA),
    .vld_in(dataIn3_TVALID),
    .ack_in(regslice_both_dataIn3_V_data_V_U_ack_in),
    .data_out(dataIn3_TDATA_int_regslice),
    .vld_out(dataIn3_TVALID_int_regslice),
    .ack_out(dataIn3_TREADY_int_regslice),
    .apdone_blk(regslice_both_dataIn3_V_data_V_U_apdone_blk)
);

switchDest_regslice_both #(
    .DataWidth( 64 ))
regslice_both_dataIn3_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(dataIn3_TKEEP),
    .vld_in(dataIn3_TVALID),
    .ack_in(regslice_both_dataIn3_V_keep_V_U_ack_in),
    .data_out(dataIn3_TKEEP_int_regslice),
    .vld_out(regslice_both_dataIn3_V_keep_V_U_vld_out),
    .ack_out(dataIn3_TREADY_int_regslice),
    .apdone_blk(regslice_both_dataIn3_V_keep_V_U_apdone_blk)
);

switchDest_regslice_both #(
    .DataWidth( 64 ))
regslice_both_dataIn3_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(dataIn3_TSTRB),
    .vld_in(dataIn3_TVALID),
    .ack_in(regslice_both_dataIn3_V_strb_V_U_ack_in),
    .data_out(dataIn3_TSTRB_int_regslice),
    .vld_out(regslice_both_dataIn3_V_strb_V_U_vld_out),
    .ack_out(dataIn3_TREADY_int_regslice),
    .apdone_blk(regslice_both_dataIn3_V_strb_V_U_apdone_blk)
);

switchDest_regslice_both #(
    .DataWidth( 1 ))
regslice_both_dataIn3_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(dataIn3_TLAST),
    .vld_in(dataIn3_TVALID),
    .ack_in(regslice_both_dataIn3_V_last_V_U_ack_in),
    .data_out(dataIn3_TLAST_int_regslice),
    .vld_out(regslice_both_dataIn3_V_last_V_U_vld_out),
    .ack_out(dataIn3_TREADY_int_regslice),
    .apdone_blk(regslice_both_dataIn3_V_last_V_U_apdone_blk)
);

switchDest_regslice_both #(
    .DataWidth( 16 ))
regslice_both_dataIn3_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(dataIn3_TDEST),
    .vld_in(dataIn3_TVALID),
    .ack_in(regslice_both_dataIn3_V_dest_V_U_ack_in),
    .data_out(dataIn3_TDEST_int_regslice),
    .vld_out(regslice_both_dataIn3_V_dest_V_U_vld_out),
    .ack_out(dataIn3_TREADY_int_regslice),
    .apdone_blk(regslice_both_dataIn3_V_dest_V_U_apdone_blk)
);

switchDest_regslice_both #(
    .DataWidth( 512 ))
regslice_both_dataIn4_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(dataIn4_TDATA),
    .vld_in(dataIn4_TVALID),
    .ack_in(regslice_both_dataIn4_V_data_V_U_ack_in),
    .data_out(dataIn4_TDATA_int_regslice),
    .vld_out(dataIn4_TVALID_int_regslice),
    .ack_out(dataIn4_TREADY_int_regslice),
    .apdone_blk(regslice_both_dataIn4_V_data_V_U_apdone_blk)
);

switchDest_regslice_both #(
    .DataWidth( 64 ))
regslice_both_dataIn4_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(dataIn4_TKEEP),
    .vld_in(dataIn4_TVALID),
    .ack_in(regslice_both_dataIn4_V_keep_V_U_ack_in),
    .data_out(dataIn4_TKEEP_int_regslice),
    .vld_out(regslice_both_dataIn4_V_keep_V_U_vld_out),
    .ack_out(dataIn4_TREADY_int_regslice),
    .apdone_blk(regslice_both_dataIn4_V_keep_V_U_apdone_blk)
);

switchDest_regslice_both #(
    .DataWidth( 64 ))
regslice_both_dataIn4_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(dataIn4_TSTRB),
    .vld_in(dataIn4_TVALID),
    .ack_in(regslice_both_dataIn4_V_strb_V_U_ack_in),
    .data_out(dataIn4_TSTRB_int_regslice),
    .vld_out(regslice_both_dataIn4_V_strb_V_U_vld_out),
    .ack_out(dataIn4_TREADY_int_regslice),
    .apdone_blk(regslice_both_dataIn4_V_strb_V_U_apdone_blk)
);

switchDest_regslice_both #(
    .DataWidth( 1 ))
regslice_both_dataIn4_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(dataIn4_TLAST),
    .vld_in(dataIn4_TVALID),
    .ack_in(regslice_both_dataIn4_V_last_V_U_ack_in),
    .data_out(dataIn4_TLAST_int_regslice),
    .vld_out(regslice_both_dataIn4_V_last_V_U_vld_out),
    .ack_out(dataIn4_TREADY_int_regslice),
    .apdone_blk(regslice_both_dataIn4_V_last_V_U_apdone_blk)
);

switchDest_regslice_both #(
    .DataWidth( 16 ))
regslice_both_dataIn4_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(dataIn4_TDEST),
    .vld_in(dataIn4_TVALID),
    .ack_in(regslice_both_dataIn4_V_dest_V_U_ack_in),
    .data_out(dataIn4_TDEST_int_regslice),
    .vld_out(regslice_both_dataIn4_V_dest_V_U_vld_out),
    .ack_out(dataIn4_TREADY_int_regslice),
    .apdone_blk(regslice_both_dataIn4_V_dest_V_U_apdone_blk)
);

switchDest_regslice_both #(
    .DataWidth( 512 ))
regslice_both_dataOut_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(ap_phi_reg_pp0_iter1_tmp_data_4_reg_183),
    .vld_in(dataOut_TVALID_int_regslice),
    .ack_in(dataOut_TREADY_int_regslice),
    .data_out(dataOut_TDATA),
    .vld_out(regslice_both_dataOut_V_data_V_U_vld_out),
    .ack_out(dataOut_TREADY),
    .apdone_blk(regslice_both_dataOut_V_data_V_U_apdone_blk)
);

switchDest_regslice_both #(
    .DataWidth( 64 ))
regslice_both_dataOut_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(ap_phi_reg_pp0_iter1_tmp_keep_4_reg_199),
    .vld_in(dataOut_TVALID_int_regslice),
    .ack_in(regslice_both_dataOut_V_keep_V_U_ack_in_dummy),
    .data_out(dataOut_TKEEP),
    .vld_out(regslice_both_dataOut_V_keep_V_U_vld_out),
    .ack_out(dataOut_TREADY),
    .apdone_blk(regslice_both_dataOut_V_keep_V_U_apdone_blk)
);

switchDest_regslice_both #(
    .DataWidth( 64 ))
regslice_both_dataOut_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(ap_phi_reg_pp0_iter1_tmp_strb_4_reg_215),
    .vld_in(dataOut_TVALID_int_regslice),
    .ack_in(regslice_both_dataOut_V_strb_V_U_ack_in_dummy),
    .data_out(dataOut_TSTRB),
    .vld_out(regslice_both_dataOut_V_strb_V_U_vld_out),
    .ack_out(dataOut_TREADY),
    .apdone_blk(regslice_both_dataOut_V_strb_V_U_apdone_blk)
);

switchDest_regslice_both #(
    .DataWidth( 1 ))
regslice_both_dataOut_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(ap_phi_reg_pp0_iter1_tmp_last_4_reg_231),
    .vld_in(dataOut_TVALID_int_regslice),
    .ack_in(regslice_both_dataOut_V_last_V_U_ack_in_dummy),
    .data_out(dataOut_TLAST),
    .vld_out(regslice_both_dataOut_V_last_V_U_vld_out),
    .ack_out(dataOut_TREADY),
    .apdone_blk(regslice_both_dataOut_V_last_V_U_apdone_blk)
);

switchDest_regslice_both #(
    .DataWidth( 16 ))
regslice_both_dataOut_V_dest_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(dataOut_TDEST_int_regslice),
    .vld_in(dataOut_TVALID_int_regslice),
    .ack_in(regslice_both_dataOut_V_dest_V_U_ack_in_dummy),
    .data_out(dataOut_TDEST),
    .vld_out(regslice_both_dataOut_V_dest_V_U_vld_out),
    .ack_out(dataOut_TREADY),
    .apdone_blk(regslice_both_dataOut_V_dest_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_phi_reg_pp0_iter1_tmp_data_4_reg_183 <= 512'd0;
    end else begin
        if ((1'b1 == ap_condition_191)) begin
            if ((1'b1 == ap_condition_58)) begin
                ap_phi_reg_pp0_iter1_tmp_data_4_reg_183 <= dataIn4_TDATA_int_regslice;
            end else if ((dest_mem == 3'd3)) begin
                ap_phi_reg_pp0_iter1_tmp_data_4_reg_183 <= dataIn3_TDATA_int_regslice;
            end else if ((dest_mem == 3'd2)) begin
                ap_phi_reg_pp0_iter1_tmp_data_4_reg_183 <= dataIn2_TDATA_int_regslice;
            end else if ((dest_mem == 3'd1)) begin
                ap_phi_reg_pp0_iter1_tmp_data_4_reg_183 <= dataIn1_TDATA_int_regslice;
            end else if ((1'b1 == 1'b1)) begin
                ap_phi_reg_pp0_iter1_tmp_data_4_reg_183 <= ap_phi_reg_pp0_iter0_tmp_data_4_reg_183;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_phi_reg_pp0_iter1_tmp_dest_reg_247 <= 2'd0;
    end else begin
        if ((1'b1 == ap_condition_191)) begin
            if ((1'b1 == ap_condition_58)) begin
                ap_phi_reg_pp0_iter1_tmp_dest_reg_247 <= 2'd3;
            end else if ((dest_mem == 3'd3)) begin
                ap_phi_reg_pp0_iter1_tmp_dest_reg_247 <= 2'd2;
            end else if ((dest_mem == 3'd2)) begin
                ap_phi_reg_pp0_iter1_tmp_dest_reg_247 <= 2'd1;
            end else if ((dest_mem == 3'd1)) begin
                ap_phi_reg_pp0_iter1_tmp_dest_reg_247 <= 2'd0;
            end else if ((1'b1 == 1'b1)) begin
                ap_phi_reg_pp0_iter1_tmp_dest_reg_247 <= ap_phi_reg_pp0_iter0_tmp_dest_reg_247;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_phi_reg_pp0_iter1_tmp_keep_4_reg_199 <= 64'd0;
    end else begin
        if ((1'b1 == ap_condition_191)) begin
            if ((1'b1 == ap_condition_58)) begin
                ap_phi_reg_pp0_iter1_tmp_keep_4_reg_199 <= dataIn4_TKEEP_int_regslice;
            end else if ((dest_mem == 3'd3)) begin
                ap_phi_reg_pp0_iter1_tmp_keep_4_reg_199 <= dataIn3_TKEEP_int_regslice;
            end else if ((dest_mem == 3'd2)) begin
                ap_phi_reg_pp0_iter1_tmp_keep_4_reg_199 <= dataIn2_TKEEP_int_regslice;
            end else if ((dest_mem == 3'd1)) begin
                ap_phi_reg_pp0_iter1_tmp_keep_4_reg_199 <= dataIn1_TKEEP_int_regslice;
            end else if ((1'b1 == 1'b1)) begin
                ap_phi_reg_pp0_iter1_tmp_keep_4_reg_199 <= ap_phi_reg_pp0_iter0_tmp_keep_4_reg_199;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_phi_reg_pp0_iter1_tmp_last_4_reg_231 <= 1'd0;
    end else begin
        if ((1'b1 == ap_condition_191)) begin
            if ((1'b1 == ap_condition_58)) begin
                ap_phi_reg_pp0_iter1_tmp_last_4_reg_231 <= dataIn4_TLAST_int_regslice;
            end else if ((dest_mem == 3'd3)) begin
                ap_phi_reg_pp0_iter1_tmp_last_4_reg_231 <= dataIn3_TLAST_int_regslice;
            end else if ((dest_mem == 3'd2)) begin
                ap_phi_reg_pp0_iter1_tmp_last_4_reg_231 <= dataIn2_TLAST_int_regslice;
            end else if ((dest_mem == 3'd1)) begin
                ap_phi_reg_pp0_iter1_tmp_last_4_reg_231 <= dataIn1_TLAST_int_regslice;
            end else if ((1'b1 == 1'b1)) begin
                ap_phi_reg_pp0_iter1_tmp_last_4_reg_231 <= ap_phi_reg_pp0_iter0_tmp_last_4_reg_231;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_phi_reg_pp0_iter1_tmp_strb_4_reg_215 <= 64'd0;
    end else begin
        if ((1'b1 == ap_condition_191)) begin
            if ((1'b1 == ap_condition_58)) begin
                ap_phi_reg_pp0_iter1_tmp_strb_4_reg_215 <= dataIn4_TSTRB_int_regslice;
            end else if ((dest_mem == 3'd3)) begin
                ap_phi_reg_pp0_iter1_tmp_strb_4_reg_215 <= dataIn3_TSTRB_int_regslice;
            end else if ((dest_mem == 3'd2)) begin
                ap_phi_reg_pp0_iter1_tmp_strb_4_reg_215 <= dataIn2_TSTRB_int_regslice;
            end else if ((dest_mem == 3'd1)) begin
                ap_phi_reg_pp0_iter1_tmp_strb_4_reg_215 <= dataIn1_TSTRB_int_regslice;
            end else if ((1'b1 == 1'b1)) begin
                ap_phi_reg_pp0_iter1_tmp_strb_4_reg_215 <= ap_phi_reg_pp0_iter0_tmp_strb_4_reg_215;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        dest_mem <= 3'd0;
    end else begin
        if ((1'b1 == ap_condition_191)) begin
            if ((1'b1 == ap_condition_225)) begin
                dest_mem <= 3'd1;
            end else if (((dest_mem == 3'd1) & (tmp_last_1_fu_328_p1 == 1'd1))) begin
                dest_mem <= 3'd2;
            end else if (((dest_mem == 3'd2) & (tmp_last_2_fu_306_p1 == 1'd1))) begin
                dest_mem <= 3'd3;
            end else if (((dest_mem == 3'd3) & (tmp_last_3_fu_284_p1 == 1'd1))) begin
                dest_mem <= 3'd4;
            end
        end
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to1 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (dest_mem == 3'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dataIn1_TDATA_blk_n = dataIn1_TVALID_int_regslice;
    end else begin
        dataIn1_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (dest_mem == 3'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dataIn1_TREADY_int_regslice = 1'b1;
    end else begin
        dataIn1_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (dest_mem == 3'd2) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dataIn2_TDATA_blk_n = dataIn2_TVALID_int_regslice;
    end else begin
        dataIn2_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (dest_mem == 3'd2) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dataIn2_TREADY_int_regslice = 1'b1;
    end else begin
        dataIn2_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (dest_mem == 3'd3) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dataIn3_TDATA_blk_n = dataIn3_TVALID_int_regslice;
    end else begin
        dataIn3_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (dest_mem == 3'd3) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dataIn3_TREADY_int_regslice = 1'b1;
    end else begin
        dataIn3_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op70_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dataIn4_TDATA_blk_n = dataIn4_TVALID_int_regslice;
    end else begin
        dataIn4_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op70_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dataIn4_TREADY_int_regslice = 1'b1;
    end else begin
        dataIn4_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        dataOut_TDATA_blk_n = dataOut_TREADY_int_regslice;
    end else begin
        dataOut_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dataOut_TVALID_int_regslice = 1'b1;
    end else begin
        dataOut_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage0_iter2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage0_iter1)) | ((ap_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter2 == 1'b1) & ((dataOut_TREADY_int_regslice == 1'b0) | (1'b1 == ap_block_state3_pp0_stage0_iter2))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((dataOut_TREADY_int_regslice == 1'b0) | (1'b1 == ap_block_state2_pp0_stage0_iter1))) | ((ap_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter2 == 1'b1) & ((dataOut_TREADY_int_regslice == 1'b0) | (1'b1 == ap_block_state3_pp0_stage0_iter2))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((dataOut_TREADY_int_regslice == 1'b0) | (1'b1 == ap_block_state2_pp0_stage0_iter1))) | ((ap_start == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (((ap_predicate_op70_read_state1 == 1'b1) & (dataIn4_TVALID_int_regslice == 1'b0)) | ((dataIn3_TVALID_int_regslice == 1'b0) & (dest_mem == 3'd3)) | ((dataIn2_TVALID_int_regslice == 1'b0) & (dest_mem == 3'd2)) | ((dataIn1_TVALID_int_regslice == 1'b0) & (dest_mem == 3'd1)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (dataOut_TREADY_int_regslice == 1'b0);
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((regslice_both_dataOut_V_data_V_U_apdone_blk == 1'b1) | (dataOut_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_condition_191 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_225 = (~(dest_mem == 3'd1) & ~(dest_mem == 3'd2) & ~(dest_mem == 3'd3) & (tmp_last_fu_350_p1 == 1'd1));
end

always @ (*) begin
    ap_condition_58 = (~(dest_mem == 3'd1) & ~(dest_mem == 3'd2) & ~(dest_mem == 3'd3));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_tmp_data_4_reg_183 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_dest_reg_247 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_keep_4_reg_199 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_last_4_reg_231 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_strb_4_reg_215 = 'bx;

always @ (*) begin
    ap_predicate_op70_read_state1 = (~(dest_mem == 3'd1) & ~(dest_mem == 3'd2) & ~(dest_mem == 3'd3));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign dataIn1_TREADY = regslice_both_dataIn1_V_data_V_U_ack_in;

assign dataIn2_TREADY = regslice_both_dataIn2_V_data_V_U_ack_in;

assign dataIn3_TREADY = regslice_both_dataIn3_V_data_V_U_ack_in;

assign dataIn4_TREADY = regslice_both_dataIn4_V_data_V_U_ack_in;

assign dataOut_TDEST_int_regslice = ap_phi_reg_pp0_iter1_tmp_dest_reg_247;

assign dataOut_TVALID = regslice_both_dataOut_V_data_V_U_vld_out;

assign tmp_last_1_fu_328_p1 = dataIn1_TLAST_int_regslice;

assign tmp_last_2_fu_306_p1 = dataIn2_TLAST_int_regslice;

assign tmp_last_3_fu_284_p1 = dataIn3_TLAST_int_regslice;

assign tmp_last_fu_350_p1 = dataIn4_TLAST_int_regslice;


reg find_kernel_block = 0;
// synthesis translate_off
`include "switchDest_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on

endmodule //switchDest

